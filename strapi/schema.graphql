### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Alert {
  createdAt: DateTime
  locale: String
  localizations: AlertRelationResponseCollection
  text: String
  updatedAt: DateTime
}

type AlertEntity {
  attributes: Alert
  id: ID
}

type AlertEntityResponse {
  data: AlertEntity
}

type AlertEntityResponseCollection {
  data: [AlertEntity!]!
  meta: ResponseCollectionMeta!
}

input AlertFiltersInput {
  and: [AlertFiltersInput]
  createdAt: DateTimeFilterInput
  locale: StringFilterInput
  localizations: AlertFiltersInput
  not: AlertFiltersInput
  or: [AlertFiltersInput]
  text: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input AlertInput {
  text: String
}

type AlertRelationResponseCollection {
  data: [AlertEntity!]!
}

type BlogPost {
  addedAt: DateTime
  author: UsersPermissionsUserEntityResponse
  coverImage: UploadFileEntityResponse
  createdAt: DateTime
  date_added: DateTime
  excerpt: String
  locale: String
  localizations(filters: BlogPostFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): BlogPostRelationResponseCollection
  moreLink: ComponentBlocksBlogPostLink
  publishedAt: DateTime
  sections: [BlogPostSectionsDynamicZone]
  slug: String
  tag: TagEntityResponse
  title: String
  updatedAt: DateTime
}

type BlogPostEntity {
  attributes: BlogPost
  id: ID
}

type BlogPostEntityResponse {
  data: BlogPostEntity
}

type BlogPostEntityResponseCollection {
  data: [BlogPostEntity!]!
  meta: ResponseCollectionMeta!
}

input BlogPostFiltersInput {
  addedAt: DateTimeFilterInput
  and: [BlogPostFiltersInput]
  author: UsersPermissionsUserFiltersInput
  createdAt: DateTimeFilterInput
  date_added: DateTimeFilterInput
  excerpt: StringFilterInput
  id: IDFilterInput
  locale: StringFilterInput
  localizations: BlogPostFiltersInput
  moreLink: ComponentBlocksBlogPostLinkFiltersInput
  not: BlogPostFiltersInput
  or: [BlogPostFiltersInput]
  publishedAt: DateTimeFilterInput
  slug: StringFilterInput
  tag: TagFiltersInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input BlogPostInput {
  addedAt: DateTime
  author: ID
  coverImage: ID
  date_added: DateTime
  excerpt: String
  moreLink: ComponentBlocksBlogPostLinkInput
  publishedAt: DateTime
  sections: [BlogPostSectionsDynamicZoneInput!]
  slug: String
  tag: ID
  title: String
}

type BlogPostRelationResponseCollection {
  data: [BlogPostEntity!]!
}

union BlogPostSectionsDynamicZone = ComponentSectionsColumnedText | ComponentSectionsDivider | ComponentSectionsFileList | ComponentSectionsGallery | ComponentSectionsNarrowText | ComponentSectionsNumericalList | ComponentSectionsTextWithImage | ComponentSectionsVideos | Error

scalar BlogPostSectionsDynamicZoneInput

input BooleanFilterInput {
  and: [Boolean]
  between: [Boolean]
  contains: Boolean
  containsi: Boolean
  endsWith: Boolean
  eq: Boolean
  eqi: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  not: BooleanFilterInput
  notContains: Boolean
  notContainsi: Boolean
  notIn: [Boolean]
  notNull: Boolean
  null: Boolean
  or: [Boolean]
  startsWith: Boolean
}

type ComponentAccordionItemsFlatText {
  align: ENUM_COMPONENTACCORDIONITEMSFLATTEXT_ALIGN
  category: String
  content: String
  id: ID!
  moreLinkPage: PageEntityResponse
  moreLinkTitle: String
  moreLinkUrl: String
  width: ENUM_COMPONENTACCORDIONITEMSFLATTEXT_WIDTH
}

input ComponentAccordionItemsFlatTextFiltersInput {
  align: StringFilterInput
  and: [ComponentAccordionItemsFlatTextFiltersInput]
  category: StringFilterInput
  content: StringFilterInput
  moreLinkPage: PageFiltersInput
  moreLinkTitle: StringFilterInput
  moreLinkUrl: StringFilterInput
  not: ComponentAccordionItemsFlatTextFiltersInput
  or: [ComponentAccordionItemsFlatTextFiltersInput]
  width: StringFilterInput
}

input ComponentAccordionItemsFlatTextInput {
  align: ENUM_COMPONENTACCORDIONITEMSFLATTEXT_ALIGN
  category: String
  content: String
  id: ID
  moreLinkPage: ID
  moreLinkTitle: String
  moreLinkUrl: String
  width: ENUM_COMPONENTACCORDIONITEMSFLATTEXT_WIDTH
}

type ComponentAccordionItemsInstitution {
  category: String
  firstColumn: String
  id: ID!
  secondColumn: String
  subtitle: String
  thirdColumn: String
  title: String
  url: String
  urlLabel: String
}

input ComponentAccordionItemsInstitutionFiltersInput {
  and: [ComponentAccordionItemsInstitutionFiltersInput]
  category: StringFilterInput
  firstColumn: StringFilterInput
  not: ComponentAccordionItemsInstitutionFiltersInput
  or: [ComponentAccordionItemsInstitutionFiltersInput]
  secondColumn: StringFilterInput
  subtitle: StringFilterInput
  thirdColumn: StringFilterInput
  title: StringFilterInput
  url: StringFilterInput
  urlLabel: StringFilterInput
}

input ComponentAccordionItemsInstitutionInput {
  category: String
  firstColumn: String
  id: ID
  secondColumn: String
  subtitle: String
  thirdColumn: String
  title: String
  url: String
  urlLabel: String
}

type ComponentAccordionItemsInstitutionNarrow {
  category: String
  id: ID!
  subtitle: String
  title: String
  url: String
  urlLabel: String
}

input ComponentAccordionItemsInstitutionNarrowFiltersInput {
  and: [ComponentAccordionItemsInstitutionNarrowFiltersInput]
  category: StringFilterInput
  not: ComponentAccordionItemsInstitutionNarrowFiltersInput
  or: [ComponentAccordionItemsInstitutionNarrowFiltersInput]
  subtitle: StringFilterInput
  title: StringFilterInput
  url: StringFilterInput
  urlLabel: StringFilterInput
}

input ComponentAccordionItemsInstitutionNarrowInput {
  category: String
  id: ID
  subtitle: String
  title: String
  url: String
  urlLabel: String
}

type ComponentBlocksBlogPostLink {
  blogPost: BlogPostEntityResponse
  id: ID!
  title: String
  url: String
}

input ComponentBlocksBlogPostLinkFiltersInput {
  and: [ComponentBlocksBlogPostLinkFiltersInput]
  blogPost: BlogPostFiltersInput
  not: ComponentBlocksBlogPostLinkFiltersInput
  or: [ComponentBlocksBlogPostLinkFiltersInput]
  title: StringFilterInput
  url: StringFilterInput
}

input ComponentBlocksBlogPostLinkInput {
  blogPost: ID
  id: ID
  title: String
  url: String
}

type ComponentBlocksBookmarkLink {
  href: String
  id: ID!
  title: String
}

input ComponentBlocksBookmarkLinkFiltersInput {
  and: [ComponentBlocksBookmarkLinkFiltersInput]
  href: StringFilterInput
  not: ComponentBlocksBookmarkLinkFiltersInput
  or: [ComponentBlocksBookmarkLinkFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksBookmarkLinkInput {
  href: String
  id: ID
  title: String
}

type ComponentBlocksCommonLink {
  blogPost: BlogPostEntityResponse
  id: ID!
  label: String!
  page: PageEntityResponse
  plausibleId: String
  url: String
}

input ComponentBlocksCommonLinkFiltersInput {
  and: [ComponentBlocksCommonLinkFiltersInput]
  blogPost: BlogPostFiltersInput
  label: StringFilterInput
  not: ComponentBlocksCommonLinkFiltersInput
  or: [ComponentBlocksCommonLinkFiltersInput]
  page: PageFiltersInput
  plausibleId: StringFilterInput
  url: StringFilterInput
}

input ComponentBlocksCommonLinkInput {
  blogPost: ID
  id: ID
  label: String
  page: ID
  plausibleId: String
  url: String
}

type ComponentBlocksComparisonCard {
  iconMedia: UploadFileEntityResponse
  id: ID!
  items(filters: ComponentBlocksComparisonItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksComparisonItem]!
  title: String!
}

input ComponentBlocksComparisonCardFiltersInput {
  and: [ComponentBlocksComparisonCardFiltersInput]
  items: ComponentBlocksComparisonItemFiltersInput
  not: ComponentBlocksComparisonCardFiltersInput
  or: [ComponentBlocksComparisonCardFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksComparisonCardInput {
  iconMedia: ID
  id: ID
  items: [ComponentBlocksComparisonItemInput]
  title: String
}

type ComponentBlocksComparisonItem {
  id: ID!
  label: String!
}

input ComponentBlocksComparisonItemFiltersInput {
  and: [ComponentBlocksComparisonItemFiltersInput]
  label: StringFilterInput
  not: ComponentBlocksComparisonItemFiltersInput
  or: [ComponentBlocksComparisonItemFiltersInput]
}

input ComponentBlocksComparisonItemInput {
  id: ID
  label: String
}

type ComponentBlocksDocListExtensions {
  document: UploadFileEntityResponse
  id: ID!
  title: String
  validFrom: Date
}

input ComponentBlocksDocListExtensionsFiltersInput {
  and: [ComponentBlocksDocListExtensionsFiltersInput]
  not: ComponentBlocksDocListExtensionsFiltersInput
  or: [ComponentBlocksDocListExtensionsFiltersInput]
  title: StringFilterInput
  validFrom: DateFilterInput
}

input ComponentBlocksDocListExtensionsInput {
  document: ID
  id: ID
  title: String
  validFrom: Date
}

type ComponentBlocksFile {
  category: String
  id: ID!
  media: UploadFileEntityResponse
  title: String
}

input ComponentBlocksFileFiltersInput {
  and: [ComponentBlocksFileFiltersInput]
  category: StringFilterInput
  not: ComponentBlocksFileFiltersInput
  or: [ComponentBlocksFileFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksFileInput {
  category: String
  id: ID
  media: ID
  title: String
}

type ComponentBlocksFileItem {
  id: ID!
  media: UploadFileEntityResponse!
  title: String
}

input ComponentBlocksFileItemFiltersInput {
  and: [ComponentBlocksFileItemFiltersInput]
  not: ComponentBlocksFileItemFiltersInput
  or: [ComponentBlocksFileItemFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksFileItemInput {
  id: ID
  media: ID
  title: String
}

type ComponentBlocksFooterColumn {
  id: ID!
  links(filters: ComponentBlocksCommonLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksCommonLink]
  title: String!
}

input ComponentBlocksFooterColumnFiltersInput {
  and: [ComponentBlocksFooterColumnFiltersInput]
  links: ComponentBlocksCommonLinkFiltersInput
  not: ComponentBlocksFooterColumnFiltersInput
  or: [ComponentBlocksFooterColumnFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksFooterColumnInput {
  id: ID
  links: [ComponentBlocksCommonLinkInput]
  title: String
}

type ComponentBlocksFooterSection {
  id: ID!
  pageLinks(filters: ComponentBlocksPageLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksPageLink]
  title: String
}

input ComponentBlocksFooterSectionFiltersInput {
  and: [ComponentBlocksFooterSectionFiltersInput]
  not: ComponentBlocksFooterSectionFiltersInput
  or: [ComponentBlocksFooterSectionFiltersInput]
  pageLinks: ComponentBlocksPageLinkFiltersInput
  title: StringFilterInput
}

input ComponentBlocksFooterSectionInput {
  id: ID
  pageLinks: [ComponentBlocksPageLinkInput]
  title: String
}

type ComponentBlocksGalleryItem {
  id: ID!
  imgSubtext: String
  imgSubtitle: String
  imgTitle: String
  media: UploadFileEntityResponse
}

input ComponentBlocksGalleryItemFiltersInput {
  and: [ComponentBlocksGalleryItemFiltersInput]
  imgSubtext: StringFilterInput
  imgSubtitle: StringFilterInput
  imgTitle: StringFilterInput
  not: ComponentBlocksGalleryItemFiltersInput
  or: [ComponentBlocksGalleryItemFiltersInput]
}

input ComponentBlocksGalleryItemInput {
  id: ID
  imgSubtext: String
  imgSubtitle: String
  imgTitle: String
  media: ID
}

type ComponentBlocksHomepageBookmark {
  headline: String
  id: ID!
  link: ComponentBlocksBookmarkLink
  picture: UploadFileEntityResponse
  text: String
  title: String
  variant: String
}

input ComponentBlocksHomepageBookmarkFiltersInput {
  and: [ComponentBlocksHomepageBookmarkFiltersInput]
  headline: StringFilterInput
  link: ComponentBlocksBookmarkLinkFiltersInput
  not: ComponentBlocksHomepageBookmarkFiltersInput
  or: [ComponentBlocksHomepageBookmarkFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
  variant: StringFilterInput
}

input ComponentBlocksHomepageBookmarkInput {
  headline: String
  id: ID
  link: ComponentBlocksBookmarkLinkInput
  picture: ID
  text: String
  title: String
  variant: String
}

type ComponentBlocksHomepageHighlightsItem {
  id: ID!
  image: UploadFileEntityResponse!
  link: ComponentBlocksCommonLink!
}

input ComponentBlocksHomepageHighlightsItemFiltersInput {
  and: [ComponentBlocksHomepageHighlightsItemFiltersInput]
  link: ComponentBlocksCommonLinkFiltersInput
  not: ComponentBlocksHomepageHighlightsItemFiltersInput
  or: [ComponentBlocksHomepageHighlightsItemFiltersInput]
}

input ComponentBlocksHomepageHighlightsItemInput {
  id: ID
  image: ID
  link: ComponentBlocksCommonLinkInput
}

type ComponentBlocksIconWithTitleAndDescription {
  desc: String
  icon: UploadFileEntityResponse
  id: ID!
  title: String
}

input ComponentBlocksIconWithTitleAndDescriptionFiltersInput {
  and: [ComponentBlocksIconWithTitleAndDescriptionFiltersInput]
  desc: StringFilterInput
  not: ComponentBlocksIconWithTitleAndDescriptionFiltersInput
  or: [ComponentBlocksIconWithTitleAndDescriptionFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksIconWithTitleAndDescriptionInput {
  desc: String
  icon: ID
  id: ID
  title: String
}

type ComponentBlocksInBa {
  content: String
  id: ID!
  title: String
}

input ComponentBlocksInBaFiltersInput {
  and: [ComponentBlocksInBaFiltersInput]
  content: StringFilterInput
  not: ComponentBlocksInBaFiltersInput
  or: [ComponentBlocksInBaFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksInBaInput {
  content: String
  id: ID
  title: String
}

type ComponentBlocksNumericalListItem {
  id: ID!
  text: String
  title: String
}

input ComponentBlocksNumericalListItemFiltersInput {
  and: [ComponentBlocksNumericalListItemFiltersInput]
  not: ComponentBlocksNumericalListItemFiltersInput
  or: [ComponentBlocksNumericalListItemFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
}

input ComponentBlocksNumericalListItemInput {
  id: ID
  text: String
  title: String
}

type ComponentBlocksPageLink {
  anchor: String
  id: ID!
  page: PageEntityResponse
  title: String
  url: String
}

input ComponentBlocksPageLinkFiltersInput {
  anchor: StringFilterInput
  and: [ComponentBlocksPageLinkFiltersInput]
  not: ComponentBlocksPageLinkFiltersInput
  or: [ComponentBlocksPageLinkFiltersInput]
  page: PageFiltersInput
  title: StringFilterInput
  url: StringFilterInput
}

input ComponentBlocksPageLinkInput {
  anchor: String
  id: ID
  page: ID
  title: String
  url: String
}

type ComponentBlocksProsAndConsCard {
  id: ID!
  items(filters: ComponentBlocksComparisonItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksComparisonItem]!
  title: String!
}

input ComponentBlocksProsAndConsCardFiltersInput {
  and: [ComponentBlocksProsAndConsCardFiltersInput]
  items: ComponentBlocksComparisonItemFiltersInput
  not: ComponentBlocksProsAndConsCardFiltersInput
  or: [ComponentBlocksProsAndConsCardFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksProsAndConsCardInput {
  id: ID
  items: [ComponentBlocksComparisonItemInput]
  title: String
}

type ComponentBlocksSpaceInfo {
  bigGapCapacity: Long
  buttonTitle: String
  footerText: String
  id: ID!
  image: UploadFileEntityResponse
  imagePosition: ENUM_COMPONENTBLOCKSSPACEINFO_IMAGEPOSITION
  linkTitle: String
  smallGapCapacity: Long
  spaceTitle: String
  subText: String
}

input ComponentBlocksSpaceInfoFiltersInput {
  and: [ComponentBlocksSpaceInfoFiltersInput]
  bigGapCapacity: LongFilterInput
  buttonTitle: StringFilterInput
  footerText: StringFilterInput
  imagePosition: StringFilterInput
  linkTitle: StringFilterInput
  not: ComponentBlocksSpaceInfoFiltersInput
  or: [ComponentBlocksSpaceInfoFiltersInput]
  smallGapCapacity: LongFilterInput
  spaceTitle: StringFilterInput
  subText: StringFilterInput
}

input ComponentBlocksSpaceInfoInput {
  bigGapCapacity: Long
  buttonTitle: String
  footerText: String
  id: ID
  image: ID
  imagePosition: ENUM_COMPONENTBLOCKSSPACEINFO_IMAGEPOSITION
  linkTitle: String
  smallGapCapacity: Long
  spaceTitle: String
  subText: String
}

type ComponentBlocksSubpage {
  id: ID!
  link: String
  title: String
}

input ComponentBlocksSubpageFiltersInput {
  and: [ComponentBlocksSubpageFiltersInput]
  link: StringFilterInput
  not: ComponentBlocksSubpageFiltersInput
  or: [ComponentBlocksSubpageFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksSubpageInput {
  id: ID
  link: String
  title: String
}

type ComponentBlocksTimelineItem {
  content: String
  id: ID!
  title: String
}

input ComponentBlocksTimelineItemFiltersInput {
  and: [ComponentBlocksTimelineItemFiltersInput]
  content: StringFilterInput
  not: ComponentBlocksTimelineItemFiltersInput
  or: [ComponentBlocksTimelineItemFiltersInput]
  title: StringFilterInput
}

input ComponentBlocksTimelineItemInput {
  content: String
  id: ID
  title: String
}

type ComponentBlocksTopServicesItem {
  icon: ENUM_COMPONENTBLOCKSTOPSERVICESITEM_ICON!
  id: ID!
  link: ComponentBlocksCommonLink!
}

input ComponentBlocksTopServicesItemFiltersInput {
  and: [ComponentBlocksTopServicesItemFiltersInput]
  icon: StringFilterInput
  link: ComponentBlocksCommonLinkFiltersInput
  not: ComponentBlocksTopServicesItemFiltersInput
  or: [ComponentBlocksTopServicesItemFiltersInput]
}

input ComponentBlocksTopServicesItemInput {
  icon: ENUM_COMPONENTBLOCKSTOPSERVICESITEM_ICON
  id: ID
  link: ComponentBlocksCommonLinkInput
}

type ComponentBlocksVideo {
  id: ID!
  speaker: String
  title: String
  url: String
}

input ComponentBlocksVideoFiltersInput {
  and: [ComponentBlocksVideoFiltersInput]
  not: ComponentBlocksVideoFiltersInput
  or: [ComponentBlocksVideoFiltersInput]
  speaker: StringFilterInput
  title: StringFilterInput
  url: StringFilterInput
}

input ComponentBlocksVideoInput {
  id: ID
  speaker: String
  title: String
  url: String
}

type ComponentGeneralHeader {
  accountLink: ComponentBlocksCommonLink
  id: ID!
  links(filters: ComponentGeneralHeaderLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentGeneralHeaderLink]
}

input ComponentGeneralHeaderFiltersInput {
  accountLink: ComponentBlocksCommonLinkFiltersInput
  and: [ComponentGeneralHeaderFiltersInput]
  links: ComponentGeneralHeaderLinkFiltersInput
  not: ComponentGeneralHeaderFiltersInput
  or: [ComponentGeneralHeaderFiltersInput]
}

input ComponentGeneralHeaderInput {
  accountLink: ComponentBlocksCommonLinkInput
  id: ID
  links: [ComponentGeneralHeaderLinkInput]
}

type ComponentGeneralHeaderLink {
  icon: ENUM_COMPONENTGENERALHEADERLINK_ICON!
  id: ID!
  label: String!
  page: PageEntityResponse
  showOnDesktop: Boolean!
  showOnMobile: Boolean!
  url: String
}

input ComponentGeneralHeaderLinkFiltersInput {
  and: [ComponentGeneralHeaderLinkFiltersInput]
  icon: StringFilterInput
  label: StringFilterInput
  not: ComponentGeneralHeaderLinkFiltersInput
  or: [ComponentGeneralHeaderLinkFiltersInput]
  page: PageFiltersInput
  showOnDesktop: BooleanFilterInput
  showOnMobile: BooleanFilterInput
  url: StringFilterInput
}

input ComponentGeneralHeaderLinkInput {
  icon: ENUM_COMPONENTGENERALHEADERLINK_ICON
  id: ID
  label: String
  page: ID
  showOnDesktop: Boolean
  showOnMobile: Boolean
  url: String
}

type ComponentMenuMenuItem {
  icon: ENUM_COMPONENTMENUMENUITEM_ICON!
  id: ID!
  label: String!
  page: PageEntityResponse
  sections(filters: ComponentMenuMenuSectionFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentMenuMenuSection]
}

input ComponentMenuMenuItemFiltersInput {
  and: [ComponentMenuMenuItemFiltersInput]
  icon: StringFilterInput
  label: StringFilterInput
  not: ComponentMenuMenuItemFiltersInput
  or: [ComponentMenuMenuItemFiltersInput]
  page: PageFiltersInput
  sections: ComponentMenuMenuSectionFiltersInput
}

input ComponentMenuMenuItemInput {
  icon: ENUM_COMPONENTMENUMENUITEM_ICON
  id: ID
  label: String
  page: ID
  sections: [ComponentMenuMenuSectionInput]
}

type ComponentMenuMenuLink {
  id: ID!
  label: String!
  page: PageEntityResponse
  url: String
}

input ComponentMenuMenuLinkFiltersInput {
  and: [ComponentMenuMenuLinkFiltersInput]
  label: StringFilterInput
  not: ComponentMenuMenuLinkFiltersInput
  or: [ComponentMenuMenuLinkFiltersInput]
  page: PageFiltersInput
  url: StringFilterInput
}

input ComponentMenuMenuLinkInput {
  id: ID
  label: String
  page: ID
  url: String
}

type ComponentMenuMenuSection {
  icon: ENUM_COMPONENTMENUMENUSECTION_ICON!
  id: ID!
  label: String!
  links(filters: ComponentMenuMenuLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentMenuMenuLink]
  page: PageEntityResponse
}

input ComponentMenuMenuSectionFiltersInput {
  and: [ComponentMenuMenuSectionFiltersInput]
  icon: StringFilterInput
  label: StringFilterInput
  links: ComponentMenuMenuLinkFiltersInput
  not: ComponentMenuMenuSectionFiltersInput
  or: [ComponentMenuMenuSectionFiltersInput]
  page: PageFiltersInput
}

input ComponentMenuMenuSectionInput {
  icon: ENUM_COMPONENTMENUMENUSECTION_ICON
  id: ID
  label: String
  links: [ComponentMenuMenuLinkInput]
  page: ID
}

type ComponentOsItemsAdvancedAccordionDepartment {
  id: ID!
  items(filters: ComponentOsItemsAdvancedAccordionSubItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentOsItemsAdvancedAccordionSubItem]
  title: String
}

input ComponentOsItemsAdvancedAccordionDepartmentFiltersInput {
  and: [ComponentOsItemsAdvancedAccordionDepartmentFiltersInput]
  items: ComponentOsItemsAdvancedAccordionSubItemFiltersInput
  not: ComponentOsItemsAdvancedAccordionDepartmentFiltersInput
  or: [ComponentOsItemsAdvancedAccordionDepartmentFiltersInput]
  title: StringFilterInput
}

input ComponentOsItemsAdvancedAccordionDepartmentInput {
  id: ID
  items: [ComponentOsItemsAdvancedAccordionSubItemInput]
  title: String
}

type ComponentOsItemsAdvancedAccordionItem {
  departments(filters: ComponentOsItemsAdvancedAccordionDepartmentFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentOsItemsAdvancedAccordionDepartment]
  id: ID!
  title: String
}

input ComponentOsItemsAdvancedAccordionItemFiltersInput {
  and: [ComponentOsItemsAdvancedAccordionItemFiltersInput]
  departments: ComponentOsItemsAdvancedAccordionDepartmentFiltersInput
  not: ComponentOsItemsAdvancedAccordionItemFiltersInput
  or: [ComponentOsItemsAdvancedAccordionItemFiltersInput]
  title: StringFilterInput
}

input ComponentOsItemsAdvancedAccordionItemInput {
  departments: [ComponentOsItemsAdvancedAccordionDepartmentInput]
  id: ID
  title: String
}

type ComponentOsItemsAdvancedAccordionSubItem {
  id: ID!
  isGroupTitle: Boolean
  items(filters: ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentOsItemsAdvancedAccordionSubSubItem]
  title: String
}

input ComponentOsItemsAdvancedAccordionSubItemFiltersInput {
  and: [ComponentOsItemsAdvancedAccordionSubItemFiltersInput]
  isGroupTitle: BooleanFilterInput
  items: ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput
  not: ComponentOsItemsAdvancedAccordionSubItemFiltersInput
  or: [ComponentOsItemsAdvancedAccordionSubItemFiltersInput]
  title: StringFilterInput
}

input ComponentOsItemsAdvancedAccordionSubItemInput {
  id: ID
  isGroupTitle: Boolean
  items: [ComponentOsItemsAdvancedAccordionSubSubItemInput]
  title: String
}

type ComponentOsItemsAdvancedAccordionSubSubItem {
  id: ID!
  title: String
}

input ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput {
  and: [ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput]
  not: ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput
  or: [ComponentOsItemsAdvancedAccordionSubSubItemFiltersInput]
  title: StringFilterInput
}

input ComponentOsItemsAdvancedAccordionSubSubItemInput {
  id: ID
  title: String
}

type ComponentSectionsAccordion {
  flatText(filters: ComponentAccordionItemsFlatTextFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentAccordionItemsFlatText]
  hasBackground: Boolean
  id: ID!
  institutions(filters: ComponentAccordionItemsInstitutionFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentAccordionItemsInstitution]
  institutionsNarrow(filters: ComponentAccordionItemsInstitutionNarrowFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentAccordionItemsInstitutionNarrow]
  title: String
}

input ComponentSectionsAccordionFiltersInput {
  and: [ComponentSectionsAccordionFiltersInput]
  flatText: ComponentAccordionItemsFlatTextFiltersInput
  hasBackground: BooleanFilterInput
  institutions: ComponentAccordionItemsInstitutionFiltersInput
  institutionsNarrow: ComponentAccordionItemsInstitutionNarrowFiltersInput
  not: ComponentSectionsAccordionFiltersInput
  or: [ComponentSectionsAccordionFiltersInput]
  title: StringFilterInput
}

input ComponentSectionsAccordionInput {
  flatText: [ComponentAccordionItemsFlatTextInput]
  hasBackground: Boolean
  id: ID
  institutions: [ComponentAccordionItemsInstitutionInput]
  institutionsNarrow: [ComponentAccordionItemsInstitutionNarrowInput]
  title: String
}

type ComponentSectionsArticlesList {
  category: PageCategoryEntityResponse
  filtering: Boolean
  id: ID!
  title: String
}

input ComponentSectionsArticlesListFiltersInput {
  and: [ComponentSectionsArticlesListFiltersInput]
  category: PageCategoryFiltersInput
  filtering: BooleanFilterInput
  not: ComponentSectionsArticlesListFiltersInput
  or: [ComponentSectionsArticlesListFiltersInput]
  title: StringFilterInput
}

input ComponentSectionsArticlesListInput {
  category: ID
  filtering: Boolean
  id: ID
  title: String
}

type ComponentSectionsBanner {
  content: String
  contentPosition: ENUM_COMPONENTSECTIONSBANNER_CONTENTPOSITION!
  id: ID!
  media: UploadFileEntityResponse!
  primaryLink: ComponentBlocksCommonLink
  secondaryLink: ComponentBlocksCommonLink
  tertiaryLink: ComponentBlocksCommonLink
  title: String!
  variant: ENUM_COMPONENTSECTIONSBANNER_VARIANT!
}

input ComponentSectionsBannerFiltersInput {
  and: [ComponentSectionsBannerFiltersInput]
  content: StringFilterInput
  contentPosition: StringFilterInput
  not: ComponentSectionsBannerFiltersInput
  or: [ComponentSectionsBannerFiltersInput]
  primaryLink: ComponentBlocksCommonLinkFiltersInput
  secondaryLink: ComponentBlocksCommonLinkFiltersInput
  tertiaryLink: ComponentBlocksCommonLinkFiltersInput
  title: StringFilterInput
  variant: StringFilterInput
}

input ComponentSectionsBannerInput {
  content: String
  contentPosition: ENUM_COMPONENTSECTIONSBANNER_CONTENTPOSITION
  id: ID
  media: ID
  primaryLink: ComponentBlocksCommonLinkInput
  secondaryLink: ComponentBlocksCommonLinkInput
  tertiaryLink: ComponentBlocksCommonLinkInput
  title: String
  variant: ENUM_COMPONENTSECTIONSBANNER_VARIANT
}

type ComponentSectionsBlogPostsList {
  id: ID!
  tags(filters: TagFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): TagRelationResponseCollection
  text: String
  title: String
}

input ComponentSectionsBlogPostsListFiltersInput {
  and: [ComponentSectionsBlogPostsListFiltersInput]
  not: ComponentSectionsBlogPostsListFiltersInput
  or: [ComponentSectionsBlogPostsListFiltersInput]
  tags: TagFiltersInput
  text: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsBlogPostsListInput {
  id: ID
  tags: [ID]
  text: String
  title: String
}

type ComponentSectionsCalculator {
  another_adult_value: Float
  child_value: Float
  hasBackground: Boolean
  id: ID!
  single_adult_value: Float
}

input ComponentSectionsCalculatorFiltersInput {
  and: [ComponentSectionsCalculatorFiltersInput]
  another_adult_value: FloatFilterInput
  child_value: FloatFilterInput
  hasBackground: BooleanFilterInput
  not: ComponentSectionsCalculatorFiltersInput
  or: [ComponentSectionsCalculatorFiltersInput]
  single_adult_value: FloatFilterInput
}

input ComponentSectionsCalculatorInput {
  another_adult_value: Float
  child_value: Float
  hasBackground: Boolean
  id: ID
  single_adult_value: Float
}

type ComponentSectionsColumnedText {
  content: String
  hasBackground: Boolean
  id: ID!
}

input ComponentSectionsColumnedTextFiltersInput {
  and: [ComponentSectionsColumnedTextFiltersInput]
  content: StringFilterInput
  hasBackground: BooleanFilterInput
  not: ComponentSectionsColumnedTextFiltersInput
  or: [ComponentSectionsColumnedTextFiltersInput]
}

input ComponentSectionsColumnedTextInput {
  content: String
  hasBackground: Boolean
  id: ID
}

type ComponentSectionsComparisonSection {
  cards(filters: ComponentBlocksComparisonCardFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksComparisonCard]!
  id: ID!
  text: String
  textAlign: ENUM_COMPONENTSECTIONSCOMPARISONSECTION_TEXTALIGN!
  title: String
}

input ComponentSectionsComparisonSectionFiltersInput {
  and: [ComponentSectionsComparisonSectionFiltersInput]
  cards: ComponentBlocksComparisonCardFiltersInput
  not: ComponentSectionsComparisonSectionFiltersInput
  or: [ComponentSectionsComparisonSectionFiltersInput]
  text: StringFilterInput
  textAlign: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsComparisonSectionInput {
  cards: [ComponentBlocksComparisonCardInput]
  id: ID
  text: String
  textAlign: ENUM_COMPONENTSECTIONSCOMPARISONSECTION_TEXTALIGN
  title: String
}

type ComponentSectionsContact {
  address: String
  description: String
  email: String
  emailLabel: String
  hasBackground: Boolean
  id: ID!
  phone: String
  phoneLabel: String
  title: String
}

input ComponentSectionsContactFiltersInput {
  address: StringFilterInput
  and: [ComponentSectionsContactFiltersInput]
  description: StringFilterInput
  email: StringFilterInput
  emailLabel: StringFilterInput
  hasBackground: BooleanFilterInput
  not: ComponentSectionsContactFiltersInput
  or: [ComponentSectionsContactFiltersInput]
  phone: StringFilterInput
  phoneLabel: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsContactInput {
  address: String
  description: String
  email: String
  emailLabel: String
  hasBackground: Boolean
  id: ID
  phone: String
  phoneLabel: String
  title: String
}

type ComponentSectionsDivider {
  hasBackground: Boolean
  id: ID!
  style: ENUM_COMPONENTSECTIONSDIVIDER_STYLE
}

input ComponentSectionsDividerFiltersInput {
  and: [ComponentSectionsDividerFiltersInput]
  hasBackground: BooleanFilterInput
  not: ComponentSectionsDividerFiltersInput
  or: [ComponentSectionsDividerFiltersInput]
  style: StringFilterInput
}

input ComponentSectionsDividerInput {
  hasBackground: Boolean
  id: ID
  style: ENUM_COMPONENTSECTIONSDIVIDER_STYLE
}

type ComponentSectionsDocumentList {
  id: ID!
  vzns(filters: VznFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): VznRelationResponseCollection
}

input ComponentSectionsDocumentListFiltersInput {
  and: [ComponentSectionsDocumentListFiltersInput]
  not: ComponentSectionsDocumentListFiltersInput
  or: [ComponentSectionsDocumentListFiltersInput]
  vzns: VznFiltersInput
}

input ComponentSectionsDocumentListInput {
  id: ID
  vzns: [ID]
}

type ComponentSectionsFeaturedBlogPosts {
  first_blog: BlogPostEntityResponse
  id: ID!
  second_blog: BlogPostEntityResponse
  third_blog: BlogPostEntityResponse
}

input ComponentSectionsFeaturedBlogPostsFiltersInput {
  and: [ComponentSectionsFeaturedBlogPostsFiltersInput]
  first_blog: BlogPostFiltersInput
  not: ComponentSectionsFeaturedBlogPostsFiltersInput
  or: [ComponentSectionsFeaturedBlogPostsFiltersInput]
  second_blog: BlogPostFiltersInput
  third_blog: BlogPostFiltersInput
}

input ComponentSectionsFeaturedBlogPostsInput {
  first_blog: ID
  id: ID
  second_blog: ID
  third_blog: ID
}

type ComponentSectionsFileList {
  fileList(filters: ComponentBlocksFileFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksFile]
  files(filters: ComponentBlocksFileItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksFileItem]
  hasBackground: Boolean
  id: ID!
  text: String
  title: String
  variant: ENUM_COMPONENTSECTIONSFILELIST_VARIANT
}

input ComponentSectionsFileListFiltersInput {
  and: [ComponentSectionsFileListFiltersInput]
  fileList: ComponentBlocksFileFiltersInput
  files: ComponentBlocksFileItemFiltersInput
  hasBackground: BooleanFilterInput
  not: ComponentSectionsFileListFiltersInput
  or: [ComponentSectionsFileListFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
  variant: StringFilterInput
}

input ComponentSectionsFileListInput {
  fileList: [ComponentBlocksFileInput]
  files: [ComponentBlocksFileItemInput]
  hasBackground: Boolean
  id: ID
  text: String
  title: String
  variant: ENUM_COMPONENTSECTIONSFILELIST_VARIANT
}

type ComponentSectionsGallery {
  galleryItems(filters: ComponentBlocksGalleryItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksGalleryItem]
  id: ID!
  subtitle: String
  title: String
}

input ComponentSectionsGalleryFiltersInput {
  and: [ComponentSectionsGalleryFiltersInput]
  galleryItems: ComponentBlocksGalleryItemFiltersInput
  not: ComponentSectionsGalleryFiltersInput
  or: [ComponentSectionsGalleryFiltersInput]
  subtitle: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsGalleryInput {
  galleryItems: [ComponentBlocksGalleryItemInput]
  id: ID
  subtitle: String
  title: String
}

type ComponentSectionsHomepageEvents {
  eventsPageLink: ComponentBlocksCommonLink
  id: ID!
  text: String
  title: String
}

input ComponentSectionsHomepageEventsFiltersInput {
  and: [ComponentSectionsHomepageEventsFiltersInput]
  eventsPageLink: ComponentBlocksCommonLinkFiltersInput
  not: ComponentSectionsHomepageEventsFiltersInput
  or: [ComponentSectionsHomepageEventsFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsHomepageEventsInput {
  eventsPageLink: ComponentBlocksCommonLinkInput
  id: ID
  text: String
  title: String
}

type ComponentSectionsHomepageHighlights {
  cards(filters: ComponentBlocksHomepageHighlightsItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksHomepageHighlightsItem]
  id: ID!
  text: String
  title: String
}

input ComponentSectionsHomepageHighlightsFiltersInput {
  and: [ComponentSectionsHomepageHighlightsFiltersInput]
  cards: ComponentBlocksHomepageHighlightsItemFiltersInput
  not: ComponentSectionsHomepageHighlightsFiltersInput
  or: [ComponentSectionsHomepageHighlightsFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsHomepageHighlightsInput {
  cards: [ComponentBlocksHomepageHighlightsItemInput]
  id: ID
  text: String
  title: String
}

type ComponentSectionsHomepageMayorAndCouncil {
  councilCard: ComponentBlocksCommonLink
  id: ID!
  mayorCard: ComponentBlocksCommonLink
  text: String
  title: String
}

input ComponentSectionsHomepageMayorAndCouncilFiltersInput {
  and: [ComponentSectionsHomepageMayorAndCouncilFiltersInput]
  councilCard: ComponentBlocksCommonLinkFiltersInput
  mayorCard: ComponentBlocksCommonLinkFiltersInput
  not: ComponentSectionsHomepageMayorAndCouncilFiltersInput
  or: [ComponentSectionsHomepageMayorAndCouncilFiltersInput]
  text: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsHomepageMayorAndCouncilInput {
  councilCard: ComponentBlocksCommonLinkInput
  id: ID
  mayorCard: ComponentBlocksCommonLinkInput
  text: String
  title: String
}

type ComponentSectionsHomepageTabs {
  id: ID!
  leftNewsItem: BlogPostEntityResponse
  newsPageLink: ComponentBlocksCommonLink
  officialBoardPageLink: ComponentBlocksCommonLink
  rightNewsItem: BlogPostEntityResponse
  roadClosuresPageLink: ComponentBlocksCommonLink
}

input ComponentSectionsHomepageTabsFiltersInput {
  and: [ComponentSectionsHomepageTabsFiltersInput]
  leftNewsItem: BlogPostFiltersInput
  newsPageLink: ComponentBlocksCommonLinkFiltersInput
  not: ComponentSectionsHomepageTabsFiltersInput
  officialBoardPageLink: ComponentBlocksCommonLinkFiltersInput
  or: [ComponentSectionsHomepageTabsFiltersInput]
  rightNewsItem: BlogPostFiltersInput
  roadClosuresPageLink: ComponentBlocksCommonLinkFiltersInput
}

input ComponentSectionsHomepageTabsInput {
  id: ID
  leftNewsItem: ID
  newsPageLink: ComponentBlocksCommonLinkInput
  officialBoardPageLink: ComponentBlocksCommonLinkInput
  rightNewsItem: ID
  roadClosuresPageLink: ComponentBlocksCommonLinkInput
}

type ComponentSectionsIconTitleDesc {
  hasBackground: Boolean
  id: ID!
  list(filters: ComponentBlocksIconWithTitleAndDescriptionFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksIconWithTitleAndDescription]
  title: String
}

input ComponentSectionsIconTitleDescFiltersInput {
  and: [ComponentSectionsIconTitleDescFiltersInput]
  hasBackground: BooleanFilterInput
  list: ComponentBlocksIconWithTitleAndDescriptionFiltersInput
  not: ComponentSectionsIconTitleDescFiltersInput
  or: [ComponentSectionsIconTitleDescFiltersInput]
  title: StringFilterInput
}

input ComponentSectionsIconTitleDescInput {
  hasBackground: Boolean
  id: ID
  list: [ComponentBlocksIconWithTitleAndDescriptionInput]
  title: String
}

type ComponentSectionsIframe {
  allowFullscreen: Boolean!
  allowGeolocation: Boolean
  css: String
  fullHeight: Boolean!
  id: ID!
  iframeHeight: String!
  iframeWidth: ENUM_COMPONENTSECTIONSIFRAME_IFRAMEWIDTH!
  url: String!
}

input ComponentSectionsIframeFiltersInput {
  allowFullscreen: BooleanFilterInput
  allowGeolocation: BooleanFilterInput
  and: [ComponentSectionsIframeFiltersInput]
  css: StringFilterInput
  fullHeight: BooleanFilterInput
  iframeHeight: StringFilterInput
  iframeWidth: StringFilterInput
  not: ComponentSectionsIframeFiltersInput
  or: [ComponentSectionsIframeFiltersInput]
  url: StringFilterInput
}

input ComponentSectionsIframeInput {
  allowFullscreen: Boolean
  allowGeolocation: Boolean
  css: String
  fullHeight: Boolean
  id: ID
  iframeHeight: String
  iframeWidth: ENUM_COMPONENTSECTIONSIFRAME_IFRAMEWIDTH
  url: String
}

type ComponentSectionsLinks {
  hasBackground: Boolean
  id: ID!
  pageLinks(filters: ComponentBlocksPageLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksPageLink]
  title: String
}

input ComponentSectionsLinksFiltersInput {
  and: [ComponentSectionsLinksFiltersInput]
  hasBackground: BooleanFilterInput
  not: ComponentSectionsLinksFiltersInput
  or: [ComponentSectionsLinksFiltersInput]
  pageLinks: ComponentBlocksPageLinkFiltersInput
  title: StringFilterInput
}

input ComponentSectionsLinksInput {
  hasBackground: Boolean
  id: ID
  pageLinks: [ComponentBlocksPageLinkInput]
  title: String
}

type ComponentSectionsNarrowText {
  align: ENUM_COMPONENTSECTIONSNARROWTEXT_ALIGN
  content: String
  hasBackground: Boolean
  id: ID!
  width: ENUM_COMPONENTSECTIONSNARROWTEXT_WIDTH
}

input ComponentSectionsNarrowTextFiltersInput {
  align: StringFilterInput
  and: [ComponentSectionsNarrowTextFiltersInput]
  content: StringFilterInput
  hasBackground: BooleanFilterInput
  not: ComponentSectionsNarrowTextFiltersInput
  or: [ComponentSectionsNarrowTextFiltersInput]
  width: StringFilterInput
}

input ComponentSectionsNarrowTextInput {
  align: ENUM_COMPONENTSECTIONSNARROWTEXT_ALIGN
  content: String
  hasBackground: Boolean
  id: ID
  width: ENUM_COMPONENTSECTIONSNARROWTEXT_WIDTH
}

type ComponentSectionsNewsletter {
  id: ID!
  title: String
}

input ComponentSectionsNewsletterFiltersInput {
  and: [ComponentSectionsNewsletterFiltersInput]
  not: ComponentSectionsNewsletterFiltersInput
  or: [ComponentSectionsNewsletterFiltersInput]
  title: StringFilterInput
}

input ComponentSectionsNewsletterInput {
  id: ID
  title: String
}

type ComponentSectionsNumericalList {
  buttonLink: String
  buttonText: String
  hasBackground: Boolean
  id: ID!
  items(filters: ComponentBlocksNumericalListItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksNumericalListItem]
  title: String
  variant: ENUM_COMPONENTSECTIONSNUMERICALLIST_VARIANT
}

input ComponentSectionsNumericalListFiltersInput {
  and: [ComponentSectionsNumericalListFiltersInput]
  buttonLink: StringFilterInput
  buttonText: StringFilterInput
  hasBackground: BooleanFilterInput
  items: ComponentBlocksNumericalListItemFiltersInput
  not: ComponentSectionsNumericalListFiltersInput
  or: [ComponentSectionsNumericalListFiltersInput]
  title: StringFilterInput
  variant: StringFilterInput
}

input ComponentSectionsNumericalListInput {
  buttonLink: String
  buttonText: String
  hasBackground: Boolean
  id: ID
  items: [ComponentBlocksNumericalListItemInput]
  title: String
  variant: ENUM_COMPONENTSECTIONSNUMERICALLIST_VARIANT
}

type ComponentSectionsOfficialBoard {
  id: ID!
}

input ComponentSectionsOfficialBoardFiltersInput {
  and: [ComponentSectionsOfficialBoardFiltersInput]
  not: ComponentSectionsOfficialBoardFiltersInput
  or: [ComponentSectionsOfficialBoardFiltersInput]
}

input ComponentSectionsOfficialBoardInput {
  id: ID
}

type ComponentSectionsOrganizationalStructure {
  id: ID!
  items(filters: ComponentOsItemsAdvancedAccordionItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentOsItemsAdvancedAccordionItem]
  title: String
}

input ComponentSectionsOrganizationalStructureFiltersInput {
  and: [ComponentSectionsOrganizationalStructureFiltersInput]
  items: ComponentOsItemsAdvancedAccordionItemFiltersInput
  not: ComponentSectionsOrganizationalStructureFiltersInput
  or: [ComponentSectionsOrganizationalStructureFiltersInput]
  title: StringFilterInput
}

input ComponentSectionsOrganizationalStructureInput {
  id: ID
  items: [ComponentOsItemsAdvancedAccordionItemInput]
  title: String
}

type ComponentSectionsProsAndConsSection {
  cons: ComponentBlocksProsAndConsCard!
  id: ID!
  pros: ComponentBlocksProsAndConsCard!
  text: String
  textAlign: ENUM_COMPONENTSECTIONSPROSANDCONSSECTION_TEXTALIGN!
  title: String
}

input ComponentSectionsProsAndConsSectionFiltersInput {
  and: [ComponentSectionsProsAndConsSectionFiltersInput]
  cons: ComponentBlocksProsAndConsCardFiltersInput
  not: ComponentSectionsProsAndConsSectionFiltersInput
  or: [ComponentSectionsProsAndConsSectionFiltersInput]
  pros: ComponentBlocksProsAndConsCardFiltersInput
  text: StringFilterInput
  textAlign: StringFilterInput
  title: StringFilterInput
}

input ComponentSectionsProsAndConsSectionInput {
  cons: ComponentBlocksProsAndConsCardInput
  id: ID
  pros: ComponentBlocksProsAndConsCardInput
  text: String
  textAlign: ENUM_COMPONENTSECTIONSPROSANDCONSSECTION_TEXTALIGN
  title: String
}

type ComponentSectionsSpace {
  id: ID!
  sectionTitle: String
  spaceInfo(filters: ComponentBlocksSpaceInfoFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksSpaceInfo]
}

input ComponentSectionsSpaceFiltersInput {
  and: [ComponentSectionsSpaceFiltersInput]
  not: ComponentSectionsSpaceFiltersInput
  or: [ComponentSectionsSpaceFiltersInput]
  sectionTitle: StringFilterInput
  spaceInfo: ComponentBlocksSpaceInfoFiltersInput
}

input ComponentSectionsSpaceInput {
  id: ID
  sectionTitle: String
  spaceInfo: [ComponentBlocksSpaceInfoInput]
}

type ComponentSectionsSubpageList {
  hasBackground: Boolean
  id: ID!
  subpageList(filters: ComponentBlocksPageLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksPageLink]
}

input ComponentSectionsSubpageListFiltersInput {
  and: [ComponentSectionsSubpageListFiltersInput]
  hasBackground: BooleanFilterInput
  not: ComponentSectionsSubpageListFiltersInput
  or: [ComponentSectionsSubpageListFiltersInput]
  subpageList: ComponentBlocksPageLinkFiltersInput
}

input ComponentSectionsSubpageListInput {
  hasBackground: Boolean
  id: ID
  subpageList: [ComponentBlocksPageLinkInput]
}

type ComponentSectionsTextWithImage {
  content: String
  hasBackground: Boolean
  id: ID!
  imagePosition: ENUM_COMPONENTSECTIONSTEXTWITHIMAGE_IMAGEPOSITION
  imageShadow: Boolean
  imageSrc: UploadFileEntityResponse
}

input ComponentSectionsTextWithImageFiltersInput {
  and: [ComponentSectionsTextWithImageFiltersInput]
  content: StringFilterInput
  hasBackground: BooleanFilterInput
  imagePosition: StringFilterInput
  imageShadow: BooleanFilterInput
  not: ComponentSectionsTextWithImageFiltersInput
  or: [ComponentSectionsTextWithImageFiltersInput]
}

input ComponentSectionsTextWithImageInput {
  content: String
  hasBackground: Boolean
  id: ID
  imagePosition: ENUM_COMPONENTSECTIONSTEXTWITHIMAGE_IMAGEPOSITION
  imageShadow: Boolean
  imageSrc: ID
}

type ComponentSectionsTimeline {
  id: ID!
  timelineItems(filters: ComponentBlocksTimelineItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksTimelineItem]
}

input ComponentSectionsTimelineFiltersInput {
  and: [ComponentSectionsTimelineFiltersInput]
  not: ComponentSectionsTimelineFiltersInput
  or: [ComponentSectionsTimelineFiltersInput]
  timelineItems: ComponentBlocksTimelineItemFiltersInput
}

input ComponentSectionsTimelineInput {
  id: ID
  timelineItems: [ComponentBlocksTimelineItemInput]
}

type ComponentSectionsTopServices {
  id: ID!
  services(filters: ComponentBlocksTopServicesItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksTopServicesItem]!
  title: String!
}

input ComponentSectionsTopServicesFiltersInput {
  and: [ComponentSectionsTopServicesFiltersInput]
  not: ComponentSectionsTopServicesFiltersInput
  or: [ComponentSectionsTopServicesFiltersInput]
  services: ComponentBlocksTopServicesItemFiltersInput
  title: StringFilterInput
}

input ComponentSectionsTopServicesInput {
  id: ID
  services: [ComponentBlocksTopServicesItemInput]
  title: String
}

type ComponentSectionsVideos {
  id: ID!
  subtitle: String
  title: String
  videos(filters: ComponentBlocksVideoFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksVideo]
}

input ComponentSectionsVideosFiltersInput {
  and: [ComponentSectionsVideosFiltersInput]
  not: ComponentSectionsVideosFiltersInput
  or: [ComponentSectionsVideosFiltersInput]
  subtitle: StringFilterInput
  title: StringFilterInput
  videos: ComponentBlocksVideoFiltersInput
}

input ComponentSectionsVideosInput {
  id: ID
  subtitle: String
  title: String
  videos: [ComponentBlocksVideoInput]
}

type ComponentSectionsWaves {
  id: ID!
  position: ENUM_COMPONENTSECTIONSWAVES_POSITION
}

input ComponentSectionsWavesFiltersInput {
  and: [ComponentSectionsWavesFiltersInput]
  not: ComponentSectionsWavesFiltersInput
  or: [ComponentSectionsWavesFiltersInput]
  position: StringFilterInput
}

input ComponentSectionsWavesInput {
  id: ID
  position: ENUM_COMPONENTSECTIONSWAVES_POSITION
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

input DateFilterInput {
  and: [Date]
  between: [Date]
  contains: Date
  containsi: Date
  endsWith: Date
  eq: Date
  eqi: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  not: DateFilterInput
  notContains: Date
  notContainsi: Date
  notIn: [Date]
  notNull: Boolean
  null: Boolean
  or: [Date]
  startsWith: Date
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFilterInput {
  and: [DateTime]
  between: [DateTime]
  contains: DateTime
  containsi: DateTime
  endsWith: DateTime
  eq: DateTime
  eqi: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  ne: DateTime
  not: DateTimeFilterInput
  notContains: DateTime
  notContainsi: DateTime
  notIn: [DateTime]
  notNull: Boolean
  null: Boolean
  or: [DateTime]
  startsWith: DateTime
}

enum ENUM_COMPONENTACCORDIONITEMSFLATTEXT_ALIGN {
  center
  left
  right
}

enum ENUM_COMPONENTACCORDIONITEMSFLATTEXT_WIDTH {
  default
  full
  narrow
  wide
}

enum ENUM_COMPONENTBLOCKSSPACEINFO_IMAGEPOSITION {
  left
  right
}

enum ENUM_COMPONENTBLOCKSTOPSERVICESITEM_ICON {
  bratislavske_konto
  dane_a_poplatky
  kampane_a_projekty
  nahlasenie_podnetov
  organizacna_struktura
  pracovne_prilezitosti
  prenajom_priestorov
  turistom_v_hlavnom_meste
  uradne_hodiny
  verejne_priestory
}

enum ENUM_COMPONENTGENERALHEADERLINK_ICON {
  esluzby
  kontakt
  som_turista
  ukraina
}

enum ENUM_COMPONENTMENUMENUITEM_ICON {
  doprava_mapy_02
  kultura_06
  mesto_01
  socialna_pomoc_04
  vzdelavanie_05
  zp_vystavba_03
}

enum ENUM_COMPONENTMENUMENUSECTION_ICON {
  aktivity_04
  byvanie_04
  covid_06
  cyklo_02
  dane_01
  dedicstvo_06
  deti_a_mladez_05
  doprava_02
  dotacie_05
  kalendar_06
  komunity_06
  koncepcia_06
  mapy_02
  mhd_02
  ocenovanie_05
  organizacie_06
  parkovanie_02
  partnerstva_01
  pomoc_04
  projekty_01
  rozvoj_mesta_03
  skolstvo_05
  sluzby_04
  sluzby_06
  sport_05
  sprava_a_udrzba_02
  sprava_mesta_01
  transparentne_mesto_01
  uzemny_plan_03
  verejne_osvetlenie_03
  vystavba_a_nehnutelnosti_03
  zariadenia_04
  zdielana_mobilita_02
  zelen_03
  zivotne_prostredie_03
}

enum ENUM_COMPONENTSECTIONSBANNER_CONTENTPOSITION {
  left
  right
}

enum ENUM_COMPONENTSECTIONSBANNER_VARIANT {
  color
  dark
  white_condensed
}

enum ENUM_COMPONENTSECTIONSCOMPARISONSECTION_TEXTALIGN {
  center
  left
}

enum ENUM_COMPONENTSECTIONSDIVIDER_STYLE {
  bicykel_02_full_width
  budovy_04_full_width
  byvanie_04_full_width
  divadlo
  doprava_02_full_width
  hrad_01_full_width
  lod_02_full_width
  mesto_01_full_width
  park_04_full_width
  parkovanie_02_full_width
  skola
  stromy_03_full_width
  vystavba_03_full_width
  vzdelavanie
}

enum ENUM_COMPONENTSECTIONSFILELIST_VARIANT {
  grid
  rows
}

enum ENUM_COMPONENTSECTIONSIFRAME_IFRAMEWIDTH {
  container
  full
}

enum ENUM_COMPONENTSECTIONSNARROWTEXT_ALIGN {
  center
  left
  right
}

enum ENUM_COMPONENTSECTIONSNARROWTEXT_WIDTH {
  default
  full
  narrow
  wide
}

enum ENUM_COMPONENTSECTIONSNUMERICALLIST_VARIANT {
  basic
  combined
  roadmap
}

enum ENUM_COMPONENTSECTIONSPROSANDCONSSECTION_TEXTALIGN {
  center
  left
}

enum ENUM_COMPONENTSECTIONSTEXTWITHIMAGE_IMAGEPOSITION {
  left
  right
}

enum ENUM_COMPONENTSECTIONSWAVES_POSITION {
  bottom
  top
}

enum ENUM_PAGECATEGORY_COLOR {
  blue
  brown
  green
  purple
  red
  yellow
}

enum ENUM_PAGECATEGORY_ICON {
  doprava_mapy_02
  kultura_06
  mesto_01
  socialna_pomoc_04
  vzdelavanie_05
  zp_vystavba_03
}

enum ENUM_PAGESUBCATEGORY_ICON {
  aktivity_04
  byvanie_04
  covid_06
  cyklo_02
  dane_01
  dedicstvo_06
  deti_a_mladez_05
  doprava_02
  dotacie_05
  kalendar_06
  komunity_06
  koncepcia_06
  mapy_02
  mhd_02
  ocenovanie_05
  organizacie_06
  parkovanie_02
  partnerstva_01
  pomoc_04
  projekty_01
  rozvoj_mesta_03
  skolstvo_05
  sluzby_04
  sluzby_06
  sport_05
  sprava_a_udrzba_02
  sprava_mesta_01
  transparentne_mesto_01
  uzemny_plan_03
  verejne_osvetlenie_03
  vystavba_a_nehnutelnosti_03
  zariadenia_04
  zdielana_mobilita_02
  zelen_03
  zivotne_prostredie_03
}

enum ENUM_PAGE_PAGECOLOR {
  blue
  brown
  green
  purple
  red
  yellow
}

enum ENUM_VZN_CATEGORY {
  archiv
  daneAPoplatky
  hospodarenie
  ostatne
  pomenovanieUlic
  poriadokACistota
  socialnaPomocASkolstvo
  uzemnePlanovanie
}

type Error {
  code: String!
  message: String
}

input FileInfoInput {
  alternativeText: String
  caption: String
  name: String
}

input FloatFilterInput {
  and: [Float]
  between: [Float]
  contains: Float
  containsi: Float
  endsWith: Float
  eq: Float
  eqi: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  not: FloatFilterInput
  notContains: Float
  notContainsi: Float
  notIn: [Float]
  notNull: Boolean
  null: Boolean
  or: [Float]
  startsWith: Float
}

type Footer {
  accessibilityPageLink: ComponentBlocksCommonLink
  address: String
  columns(filters: ComponentBlocksFooterColumnFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksFooterColumn]
  createdAt: DateTime
  email: String
  facebookUrl: String
  innovationsLink: ComponentBlocksCommonLink
  instagramUrl: String
  locale: String
  localizations(publicationState: PublicationState = LIVE): FooterRelationResponseCollection
  mediaEmail: String
  phone: String
  publishedAt: DateTime
  updatedAt: DateTime
}

type FooterEntity {
  attributes: Footer
  id: ID
}

type FooterEntityResponse {
  data: FooterEntity
}

type FooterEntityResponseCollection {
  data: [FooterEntity!]!
  meta: ResponseCollectionMeta!
}

input FooterFiltersInput {
  accessibilityPageLink: ComponentBlocksCommonLinkFiltersInput
  address: StringFilterInput
  and: [FooterFiltersInput]
  columns: ComponentBlocksFooterColumnFiltersInput
  createdAt: DateTimeFilterInput
  email: StringFilterInput
  facebookUrl: StringFilterInput
  innovationsLink: ComponentBlocksCommonLinkFiltersInput
  instagramUrl: StringFilterInput
  locale: StringFilterInput
  localizations: FooterFiltersInput
  mediaEmail: StringFilterInput
  not: FooterFiltersInput
  or: [FooterFiltersInput]
  phone: StringFilterInput
  publishedAt: DateTimeFilterInput
  updatedAt: DateTimeFilterInput
}

input FooterInput {
  accessibilityPageLink: ComponentBlocksCommonLinkInput
  address: String
  columns: [ComponentBlocksFooterColumnInput]
  email: String
  facebookUrl: String
  innovationsLink: ComponentBlocksCommonLinkInput
  instagramUrl: String
  mediaEmail: String
  phone: String
  publishedAt: DateTime
}

type FooterRelationResponseCollection {
  data: [FooterEntity!]!
}

type General {
  createdAt: DateTime
  header: ComponentGeneralHeader
  locale: String
  localizations: GeneralRelationResponseCollection
  newsPage: PageEntityResponse
  officialBoardPage: PageEntityResponse
  privacyPolicyPage: PageEntityResponse
  showUaChatPages(filters: PageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageRelationResponseCollection
  updatedAt: DateTime
  vznPage: PageEntityResponse
}

type GeneralEntity {
  attributes: General
  id: ID
}

type GeneralEntityResponse {
  data: GeneralEntity
}

type GeneralEntityResponseCollection {
  data: [GeneralEntity!]!
  meta: ResponseCollectionMeta!
}

input GeneralFiltersInput {
  and: [GeneralFiltersInput]
  createdAt: DateTimeFilterInput
  header: ComponentGeneralHeaderFiltersInput
  locale: StringFilterInput
  localizations: GeneralFiltersInput
  newsPage: PageFiltersInput
  not: GeneralFiltersInput
  officialBoardPage: PageFiltersInput
  or: [GeneralFiltersInput]
  privacyPolicyPage: PageFiltersInput
  showUaChatPages: PageFiltersInput
  updatedAt: DateTimeFilterInput
  vznPage: PageFiltersInput
}

input GeneralInput {
  header: ComponentGeneralHeaderInput
  newsPage: ID
  officialBoardPage: ID
  privacyPolicyPage: ID
  showUaChatPages: [ID]
  vznPage: ID
}

type GeneralRelationResponseCollection {
  data: [GeneralEntity!]!
}

union GenericMorph = Alert | BlogPost | ComponentAccordionItemsFlatText | ComponentAccordionItemsInstitution | ComponentAccordionItemsInstitutionNarrow | ComponentBlocksBlogPostLink | ComponentBlocksBookmarkLink | ComponentBlocksCommonLink | ComponentBlocksComparisonCard | ComponentBlocksComparisonItem | ComponentBlocksDocListExtensions | ComponentBlocksFile | ComponentBlocksFileItem | ComponentBlocksFooterColumn | ComponentBlocksFooterSection | ComponentBlocksGalleryItem | ComponentBlocksHomepageBookmark | ComponentBlocksHomepageHighlightsItem | ComponentBlocksIconWithTitleAndDescription | ComponentBlocksInBa | ComponentBlocksNumericalListItem | ComponentBlocksPageLink | ComponentBlocksProsAndConsCard | ComponentBlocksSpaceInfo | ComponentBlocksSubpage | ComponentBlocksTimelineItem | ComponentBlocksTopServicesItem | ComponentBlocksVideo | ComponentGeneralHeader | ComponentGeneralHeaderLink | ComponentMenuMenuItem | ComponentMenuMenuLink | ComponentMenuMenuSection | ComponentOsItemsAdvancedAccordionDepartment | ComponentOsItemsAdvancedAccordionItem | ComponentOsItemsAdvancedAccordionSubItem | ComponentOsItemsAdvancedAccordionSubSubItem | ComponentSectionsAccordion | ComponentSectionsArticlesList | ComponentSectionsBanner | ComponentSectionsBlogPostsList | ComponentSectionsCalculator | ComponentSectionsColumnedText | ComponentSectionsComparisonSection | ComponentSectionsContact | ComponentSectionsDivider | ComponentSectionsDocumentList | ComponentSectionsFeaturedBlogPosts | ComponentSectionsFileList | ComponentSectionsGallery | ComponentSectionsHomepageEvents | ComponentSectionsHomepageHighlights | ComponentSectionsHomepageMayorAndCouncil | ComponentSectionsHomepageTabs | ComponentSectionsIconTitleDesc | ComponentSectionsIframe | ComponentSectionsLinks | ComponentSectionsNarrowText | ComponentSectionsNewsletter | ComponentSectionsNumericalList | ComponentSectionsOfficialBoard | ComponentSectionsOrganizationalStructure | ComponentSectionsProsAndConsSection | ComponentSectionsSpace | ComponentSectionsSubpageList | ComponentSectionsTextWithImage | ComponentSectionsTimeline | ComponentSectionsTopServices | ComponentSectionsVideos | ComponentSectionsWaves | Footer | General | Homepage | I18NLocale | Menu | Page | PageCategory | PageSubcategory | Tag | UploadFile | UploadFolder | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser | Vzn

type Homepage {
  bookmarkTourists: ComponentBlocksHomepageBookmark
  bookmarkUkraine: ComponentBlocksHomepageBookmark
  cards(filters: ComponentBlocksHomepageBookmarkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksHomepageBookmark]
  createdAt: DateTime
  eventsSection: ComponentSectionsHomepageEvents
  highlights: ComponentSectionsHomepageHighlights
  inba: ComponentBlocksInBa
  inbaFrontImage: UploadFileEntityResponse!
  inbaRearImage: UploadFileEntityResponse!
  inbaUrl: String
  locale: String
  localizations(publicationState: PublicationState = LIVE): HomepageRelationResponseCollection
  mayorAndCouncil: ComponentSectionsHomepageMayorAndCouncil
  metaDescription: String!
  metaTitle: String!
  publishedAt: DateTime
  tabs: ComponentSectionsHomepageTabs
  topServices: ComponentSectionsTopServices
  updatedAt: DateTime
  welcomeHeadline: String!
  welcomeMedia: UploadFileEntityResponse!
}

type HomepageEntity {
  attributes: Homepage
  id: ID
}

type HomepageEntityResponse {
  data: HomepageEntity
}

type HomepageEntityResponseCollection {
  data: [HomepageEntity!]!
  meta: ResponseCollectionMeta!
}

input HomepageFiltersInput {
  and: [HomepageFiltersInput]
  bookmarkTourists: ComponentBlocksHomepageBookmarkFiltersInput
  bookmarkUkraine: ComponentBlocksHomepageBookmarkFiltersInput
  cards: ComponentBlocksHomepageBookmarkFiltersInput
  createdAt: DateTimeFilterInput
  eventsSection: ComponentSectionsHomepageEventsFiltersInput
  highlights: ComponentSectionsHomepageHighlightsFiltersInput
  inba: ComponentBlocksInBaFiltersInput
  inbaUrl: StringFilterInput
  locale: StringFilterInput
  localizations: HomepageFiltersInput
  mayorAndCouncil: ComponentSectionsHomepageMayorAndCouncilFiltersInput
  metaDescription: StringFilterInput
  metaTitle: StringFilterInput
  not: HomepageFiltersInput
  or: [HomepageFiltersInput]
  publishedAt: DateTimeFilterInput
  tabs: ComponentSectionsHomepageTabsFiltersInput
  topServices: ComponentSectionsTopServicesFiltersInput
  updatedAt: DateTimeFilterInput
  welcomeHeadline: StringFilterInput
}

input HomepageInput {
  bookmarkTourists: ComponentBlocksHomepageBookmarkInput
  bookmarkUkraine: ComponentBlocksHomepageBookmarkInput
  cards: [ComponentBlocksHomepageBookmarkInput]
  eventsSection: ComponentSectionsHomepageEventsInput
  highlights: ComponentSectionsHomepageHighlightsInput
  inba: ComponentBlocksInBaInput
  inbaFrontImage: ID
  inbaRearImage: ID
  inbaUrl: String
  mayorAndCouncil: ComponentSectionsHomepageMayorAndCouncilInput
  metaDescription: String
  metaTitle: String
  publishedAt: DateTime
  tabs: ComponentSectionsHomepageTabsInput
  topServices: ComponentSectionsTopServicesInput
  welcomeHeadline: String
  welcomeMedia: ID
}

type HomepageRelationResponseCollection {
  data: [HomepageEntity!]!
}

type I18NLocale {
  code: String
  createdAt: DateTime
  name: String
  updatedAt: DateTime
}

"""A string used to identify an i18n locale"""
scalar I18NLocaleCode

type I18NLocaleEntity {
  attributes: I18NLocale
  id: ID
}

type I18NLocaleEntityResponse {
  data: I18NLocaleEntity
}

type I18NLocaleEntityResponseCollection {
  data: [I18NLocaleEntity!]!
  meta: ResponseCollectionMeta!
}

input I18NLocaleFiltersInput {
  and: [I18NLocaleFiltersInput]
  code: StringFilterInput
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  name: StringFilterInput
  not: I18NLocaleFiltersInput
  or: [I18NLocaleFiltersInput]
  updatedAt: DateTimeFilterInput
}

input I18NLocaleInput {
  code: String
  name: String
}

type I18NLocaleRelationResponseCollection {
  data: [I18NLocaleEntity!]!
}

input IDFilterInput {
  and: [ID]
  between: [ID]
  contains: ID
  containsi: ID
  endsWith: ID
  eq: ID
  eqi: ID
  gt: ID
  gte: ID
  in: [ID]
  lt: ID
  lte: ID
  ne: ID
  not: IDFilterInput
  notContains: ID
  notContainsi: ID
  notIn: [ID]
  notNull: Boolean
  null: Boolean
  or: [ID]
  startsWith: ID
}

input IntFilterInput {
  and: [Int]
  between: [Int]
  contains: Int
  containsi: Int
  endsWith: Int
  eq: Int
  eqi: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  not: IntFilterInput
  notContains: Int
  notContainsi: Int
  notIn: [Int]
  notNull: Boolean
  null: Boolean
  or: [Int]
  startsWith: Int
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JSONFilterInput {
  and: [JSON]
  between: [JSON]
  contains: JSON
  containsi: JSON
  endsWith: JSON
  eq: JSON
  eqi: JSON
  gt: JSON
  gte: JSON
  in: [JSON]
  lt: JSON
  lte: JSON
  ne: JSON
  not: JSONFilterInput
  notContains: JSON
  notContainsi: JSON
  notIn: [JSON]
  notNull: Boolean
  null: Boolean
  or: [JSON]
  startsWith: JSON
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar Long

input LongFilterInput {
  and: [Long]
  between: [Long]
  contains: Long
  containsi: Long
  endsWith: Long
  eq: Long
  eqi: Long
  gt: Long
  gte: Long
  in: [Long]
  lt: Long
  lte: Long
  ne: Long
  not: LongFilterInput
  notContains: Long
  notContainsi: Long
  notIn: [Long]
  notNull: Boolean
  null: Boolean
  or: [Long]
  startsWith: Long
}

type Menu {
  createdAt: DateTime
  locale: String
  localizations: MenuRelationResponseCollection
  menus(filters: ComponentMenuMenuItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentMenuMenuItem]
  updatedAt: DateTime
}

type MenuEntity {
  attributes: Menu
  id: ID
}

type MenuEntityResponse {
  data: MenuEntity
}

type MenuEntityResponseCollection {
  data: [MenuEntity!]!
  meta: ResponseCollectionMeta!
}

input MenuFiltersInput {
  and: [MenuFiltersInput]
  createdAt: DateTimeFilterInput
  locale: StringFilterInput
  localizations: MenuFiltersInput
  menus: ComponentMenuMenuItemFiltersInput
  not: MenuFiltersInput
  or: [MenuFiltersInput]
  updatedAt: DateTimeFilterInput
}

input MenuInput {
  menus: [ComponentMenuMenuItemInput]
}

type MenuRelationResponseCollection {
  data: [MenuEntity!]!
}

type Mutation {
  """Change user password. Confirm with the current password."""
  changePassword(currentPassword: String!, password: String!, passwordConfirmation: String!): UsersPermissionsLoginPayload
  createAlertLocalization(data: AlertInput, id: ID, locale: I18NLocaleCode): AlertEntityResponse
  createBlogPost(data: BlogPostInput!, locale: I18NLocaleCode): BlogPostEntityResponse
  createBlogPostLocalization(data: BlogPostInput, id: ID, locale: I18NLocaleCode): BlogPostEntityResponse
  createFooterLocalization(data: FooterInput, id: ID, locale: I18NLocaleCode): FooterEntityResponse
  createGeneralLocalization(data: GeneralInput, id: ID, locale: I18NLocaleCode): GeneralEntityResponse
  createHomepageLocalization(data: HomepageInput, id: ID, locale: I18NLocaleCode): HomepageEntityResponse
  createMenuLocalization(data: MenuInput, id: ID, locale: I18NLocaleCode): MenuEntityResponse
  createPage(data: PageInput!, locale: I18NLocaleCode): PageEntityResponse
  createPageCategory(data: PageCategoryInput!, locale: I18NLocaleCode): PageCategoryEntityResponse
  createPageCategoryLocalization(data: PageCategoryInput, id: ID, locale: I18NLocaleCode): PageCategoryEntityResponse
  createPageLocalization(data: PageInput, id: ID, locale: I18NLocaleCode): PageEntityResponse
  createPageSubcategory(data: PageSubcategoryInput!, locale: I18NLocaleCode): PageSubcategoryEntityResponse
  createPageSubcategoryLocalization(data: PageSubcategoryInput, id: ID, locale: I18NLocaleCode): PageSubcategoryEntityResponse
  createTag(data: TagInput!, locale: I18NLocaleCode): TagEntityResponse
  createTagLocalization(data: TagInput, id: ID, locale: I18NLocaleCode): TagEntityResponse
  createUploadFile(data: UploadFileInput!): UploadFileEntityResponse
  createUploadFolder(data: UploadFolderInput!): UploadFolderEntityResponse

  """Create a new role"""
  createUsersPermissionsRole(data: UsersPermissionsRoleInput!): UsersPermissionsCreateRolePayload

  """Create a new user"""
  createUsersPermissionsUser(data: UsersPermissionsUserInput!): UsersPermissionsUserEntityResponse!
  createVzn(data: VznInput!): VznEntityResponse
  deleteAlert(locale: I18NLocaleCode): AlertEntityResponse
  deleteBlogPost(id: ID!, locale: I18NLocaleCode): BlogPostEntityResponse
  deleteFooter(locale: I18NLocaleCode): FooterEntityResponse
  deleteGeneral(locale: I18NLocaleCode): GeneralEntityResponse
  deleteHomepage(locale: I18NLocaleCode): HomepageEntityResponse
  deleteMenu(locale: I18NLocaleCode): MenuEntityResponse
  deletePage(id: ID!, locale: I18NLocaleCode): PageEntityResponse
  deletePageCategory(id: ID!, locale: I18NLocaleCode): PageCategoryEntityResponse
  deletePageSubcategory(id: ID!, locale: I18NLocaleCode): PageSubcategoryEntityResponse
  deleteTag(id: ID!, locale: I18NLocaleCode): TagEntityResponse
  deleteUploadFile(id: ID!): UploadFileEntityResponse
  deleteUploadFolder(id: ID!): UploadFolderEntityResponse

  """Delete an existing role"""
  deleteUsersPermissionsRole(id: ID!): UsersPermissionsDeleteRolePayload

  """Delete an existing user"""
  deleteUsersPermissionsUser(id: ID!): UsersPermissionsUserEntityResponse!
  deleteVzn(id: ID!): VznEntityResponse

  """Confirm an email users email address"""
  emailConfirmation(confirmation: String!): UsersPermissionsLoginPayload

  """Request a reset password token"""
  forgotPassword(email: String!): UsersPermissionsPasswordPayload
  login(input: UsersPermissionsLoginInput!): UsersPermissionsLoginPayload!
  multipleUpload(field: String, files: [Upload]!, ref: String, refId: ID): [UploadFileEntityResponse]!

  """Register a user"""
  register(input: UsersPermissionsRegisterInput!): UsersPermissionsLoginPayload!
  removeFile(id: ID!): UploadFileEntityResponse

  """
  Reset user password. Confirm with a code (resetToken from forgotPassword)
  """
  resetPassword(code: String!, password: String!, passwordConfirmation: String!): UsersPermissionsLoginPayload
  updateAlert(data: AlertInput!, locale: I18NLocaleCode): AlertEntityResponse
  updateBlogPost(data: BlogPostInput!, id: ID!, locale: I18NLocaleCode): BlogPostEntityResponse
  updateFileInfo(id: ID!, info: FileInfoInput): UploadFileEntityResponse!
  updateFooter(data: FooterInput!, locale: I18NLocaleCode): FooterEntityResponse
  updateGeneral(data: GeneralInput!, locale: I18NLocaleCode): GeneralEntityResponse
  updateHomepage(data: HomepageInput!, locale: I18NLocaleCode): HomepageEntityResponse
  updateMenu(data: MenuInput!, locale: I18NLocaleCode): MenuEntityResponse
  updatePage(data: PageInput!, id: ID!, locale: I18NLocaleCode): PageEntityResponse
  updatePageCategory(data: PageCategoryInput!, id: ID!, locale: I18NLocaleCode): PageCategoryEntityResponse
  updatePageSubcategory(data: PageSubcategoryInput!, id: ID!, locale: I18NLocaleCode): PageSubcategoryEntityResponse
  updateTag(data: TagInput!, id: ID!, locale: I18NLocaleCode): TagEntityResponse
  updateUploadFile(data: UploadFileInput!, id: ID!): UploadFileEntityResponse
  updateUploadFolder(data: UploadFolderInput!, id: ID!): UploadFolderEntityResponse

  """Update an existing role"""
  updateUsersPermissionsRole(data: UsersPermissionsRoleInput!, id: ID!): UsersPermissionsUpdateRolePayload

  """Update an existing user"""
  updateUsersPermissionsUser(data: UsersPermissionsUserInput!, id: ID!): UsersPermissionsUserEntityResponse!
  updateVzn(data: VznInput!, id: ID!): VznEntityResponse
  upload(field: String, file: Upload!, info: FileInfoInput, ref: String, refId: ID): UploadFileEntityResponse!
}

type Page {
  childPages(filters: PageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageRelationResponseCollection
  createdAt: DateTime
  headerLinks(filters: ComponentBlocksCommonLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksCommonLink]
  keywords: String
  locale: String
  localizations(filters: PageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageRelationResponseCollection
  metaDiscription: String
  pageBackgroundImage: UploadFileEntityResponse
  pageCategory: PageCategoryEntityResponse
  pageColor: ENUM_PAGE_PAGECOLOR
  pageHeaderSections: [PagePageHeaderSectionsDynamicZone]
  parentPage: PageEntityResponse
  publishedAt: DateTime
  relatedContents(filters: TagFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): TagRelationResponseCollection
  sections: [PageSectionsDynamicZone]
  slug: String
  subtext: String
  title: String
  updatedAt: DateTime
}

type PageCategory {
  color: ENUM_PAGECATEGORY_COLOR
  createdAt: DateTime
  icon: ENUM_PAGECATEGORY_ICON
  locale: String
  localizations(filters: PageCategoryFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageCategoryRelationResponseCollection
  pages(filters: PageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageRelationResponseCollection
  publishedAt: DateTime
  shortTitle: String
  subcategories(filters: PageSubcategoryFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageSubcategoryRelationResponseCollection
  title: String
  updatedAt: DateTime
}

type PageCategoryEntity {
  attributes: PageCategory
  id: ID
}

type PageCategoryEntityResponse {
  data: PageCategoryEntity
}

type PageCategoryEntityResponseCollection {
  data: [PageCategoryEntity!]!
  meta: ResponseCollectionMeta!
}

input PageCategoryFiltersInput {
  and: [PageCategoryFiltersInput]
  color: StringFilterInput
  createdAt: DateTimeFilterInput
  icon: StringFilterInput
  id: IDFilterInput
  locale: StringFilterInput
  localizations: PageCategoryFiltersInput
  not: PageCategoryFiltersInput
  or: [PageCategoryFiltersInput]
  pages: PageFiltersInput
  publishedAt: DateTimeFilterInput
  shortTitle: StringFilterInput
  subcategories: PageSubcategoryFiltersInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input PageCategoryInput {
  color: ENUM_PAGECATEGORY_COLOR
  icon: ENUM_PAGECATEGORY_ICON
  pages: [ID]
  publishedAt: DateTime
  shortTitle: String
  subcategories: [ID]
  title: String
}

type PageCategoryRelationResponseCollection {
  data: [PageCategoryEntity!]!
}

type PageEntity {
  attributes: Page
  id: ID
}

type PageEntityResponse {
  data: PageEntity
}

type PageEntityResponseCollection {
  data: [PageEntity!]!
  meta: ResponseCollectionMeta!
}

input PageFiltersInput {
  and: [PageFiltersInput]
  childPages: PageFiltersInput
  createdAt: DateTimeFilterInput
  headerLinks: ComponentBlocksCommonLinkFiltersInput
  id: IDFilterInput
  keywords: StringFilterInput
  locale: StringFilterInput
  localizations: PageFiltersInput
  metaDiscription: StringFilterInput
  not: PageFiltersInput
  or: [PageFiltersInput]
  pageCategory: PageCategoryFiltersInput
  pageColor: StringFilterInput
  parentPage: PageFiltersInput
  publishedAt: DateTimeFilterInput
  relatedContents: TagFiltersInput
  slug: StringFilterInput
  subtext: StringFilterInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input PageInput {
  childPages: [ID]
  headerLinks: [ComponentBlocksCommonLinkInput]
  keywords: String
  metaDiscription: String
  pageBackgroundImage: ID
  pageCategory: ID
  pageColor: ENUM_PAGE_PAGECOLOR
  pageHeaderSections: [PagePageHeaderSectionsDynamicZoneInput!]
  parentPage: ID
  publishedAt: DateTime
  relatedContents: [ID]
  sections: [PageSectionsDynamicZoneInput!]
  slug: String
  subtext: String
  title: String
}

union PagePageHeaderSectionsDynamicZone = ComponentSectionsSubpageList | Error

scalar PagePageHeaderSectionsDynamicZoneInput

type PageRelationResponseCollection {
  data: [PageEntity!]!
}

union PageSectionsDynamicZone = ComponentSectionsAccordion | ComponentSectionsArticlesList | ComponentSectionsBanner | ComponentSectionsBlogPostsList | ComponentSectionsCalculator | ComponentSectionsColumnedText | ComponentSectionsComparisonSection | ComponentSectionsContact | ComponentSectionsDivider | ComponentSectionsDocumentList | ComponentSectionsFeaturedBlogPosts | ComponentSectionsFileList | ComponentSectionsGallery | ComponentSectionsIconTitleDesc | ComponentSectionsIframe | ComponentSectionsLinks | ComponentSectionsNarrowText | ComponentSectionsNewsletter | ComponentSectionsNumericalList | ComponentSectionsOfficialBoard | ComponentSectionsOrganizationalStructure | ComponentSectionsProsAndConsSection | ComponentSectionsSpace | ComponentSectionsTextWithImage | ComponentSectionsTimeline | ComponentSectionsVideos | ComponentSectionsWaves | Error

scalar PageSectionsDynamicZoneInput

type PageSubcategory {
  createdAt: DateTime
  icon: ENUM_PAGESUBCATEGORY_ICON
  locale: String
  localizations(filters: PageSubcategoryFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageSubcategoryRelationResponseCollection
  moreLink: ComponentBlocksPageLink
  pages(filters: ComponentBlocksPageLinkFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksPageLink]
  publishedAt: DateTime
  title: String
  updatedAt: DateTime
}

type PageSubcategoryEntity {
  attributes: PageSubcategory
  id: ID
}

type PageSubcategoryEntityResponse {
  data: PageSubcategoryEntity
}

type PageSubcategoryEntityResponseCollection {
  data: [PageSubcategoryEntity!]!
  meta: ResponseCollectionMeta!
}

input PageSubcategoryFiltersInput {
  and: [PageSubcategoryFiltersInput]
  createdAt: DateTimeFilterInput
  icon: StringFilterInput
  id: IDFilterInput
  locale: StringFilterInput
  localizations: PageSubcategoryFiltersInput
  moreLink: ComponentBlocksPageLinkFiltersInput
  not: PageSubcategoryFiltersInput
  or: [PageSubcategoryFiltersInput]
  pages: ComponentBlocksPageLinkFiltersInput
  publishedAt: DateTimeFilterInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input PageSubcategoryInput {
  icon: ENUM_PAGESUBCATEGORY_ICON
  moreLink: ComponentBlocksPageLinkInput
  pages: [ComponentBlocksPageLinkInput]
  publishedAt: DateTime
  title: String
}

type PageSubcategoryRelationResponseCollection {
  data: [PageSubcategoryEntity!]!
}

type Pagination {
  page: Int!
  pageCount: Int!
  pageSize: Int!
  total: Int!
}

input PaginationArg {
  limit: Int
  page: Int
  pageSize: Int
  start: Int
}

enum PublicationState {
  LIVE
  PREVIEW
}

type Query {
  alert(locale: I18NLocaleCode): AlertEntityResponse
  blogPost(id: ID, locale: I18NLocaleCode): BlogPostEntityResponse
  blogPosts(filters: BlogPostFiltersInput, locale: I18NLocaleCode, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): BlogPostEntityResponseCollection
  footer(locale: I18NLocaleCode, publicationState: PublicationState = LIVE): FooterEntityResponse
  general(locale: I18NLocaleCode): GeneralEntityResponse
  homepage(locale: I18NLocaleCode, publicationState: PublicationState = LIVE): HomepageEntityResponse
  i18NLocale(id: ID): I18NLocaleEntityResponse
  i18NLocales(filters: I18NLocaleFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): I18NLocaleEntityResponseCollection
  me: UsersPermissionsMe
  menu(locale: I18NLocaleCode): MenuEntityResponse
  page(id: ID, locale: I18NLocaleCode): PageEntityResponse
  pageCategories(filters: PageCategoryFiltersInput, locale: I18NLocaleCode, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageCategoryEntityResponseCollection
  pageCategory(id: ID, locale: I18NLocaleCode): PageCategoryEntityResponse
  pageSubcategories(filters: PageSubcategoryFiltersInput, locale: I18NLocaleCode, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageSubcategoryEntityResponseCollection
  pageSubcategory(id: ID, locale: I18NLocaleCode): PageSubcategoryEntityResponse
  pages(filters: PageFiltersInput, locale: I18NLocaleCode, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): PageEntityResponseCollection
  tag(id: ID, locale: I18NLocaleCode): TagEntityResponse
  tags(filters: TagFiltersInput, locale: I18NLocaleCode, pagination: PaginationArg = {}, sort: [String] = []): TagEntityResponseCollection
  uploadFile(id: ID): UploadFileEntityResponse
  uploadFiles(filters: UploadFileFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UploadFileEntityResponseCollection
  uploadFolder(id: ID): UploadFolderEntityResponse
  uploadFolders(filters: UploadFolderFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UploadFolderEntityResponseCollection
  usersPermissionsRole(id: ID): UsersPermissionsRoleEntityResponse
  usersPermissionsRoles(filters: UsersPermissionsRoleFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UsersPermissionsRoleEntityResponseCollection
  usersPermissionsUser(id: ID): UsersPermissionsUserEntityResponse
  usersPermissionsUsers(filters: UsersPermissionsUserFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UsersPermissionsUserEntityResponseCollection
  vzn(id: ID): VznEntityResponse
  vzns(filters: VznFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): VznEntityResponseCollection
}

type ResponseCollectionMeta {
  pagination: Pagination!
}

input StringFilterInput {
  and: [String]
  between: [String]
  contains: String
  containsi: String
  endsWith: String
  eq: String
  eqi: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  not: StringFilterInput
  notContains: String
  notContainsi: String
  notIn: [String]
  notNull: Boolean
  null: Boolean
  or: [String]
  startsWith: String
}

type Tag {
  createdAt: DateTime
  locale: String
  localizations(filters: TagFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): TagRelationResponseCollection
  pageCategory: PageCategoryEntityResponse
  title: String
  updatedAt: DateTime
}

type TagEntity {
  attributes: Tag
  id: ID
}

type TagEntityResponse {
  data: TagEntity
}

type TagEntityResponseCollection {
  data: [TagEntity!]!
  meta: ResponseCollectionMeta!
}

input TagFiltersInput {
  and: [TagFiltersInput]
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  locale: StringFilterInput
  localizations: TagFiltersInput
  not: TagFiltersInput
  or: [TagFiltersInput]
  pageCategory: PageCategoryFiltersInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

input TagInput {
  pageCategory: ID
  title: String
}

type TagRelationResponseCollection {
  data: [TagEntity!]!
}

"""A time string with format HH:mm:ss.SSS"""
scalar Time

input TimeFilterInput {
  and: [Time]
  between: [Time]
  contains: Time
  containsi: Time
  endsWith: Time
  eq: Time
  eqi: Time
  gt: Time
  gte: Time
  in: [Time]
  lt: Time
  lte: Time
  ne: Time
  not: TimeFilterInput
  notContains: Time
  notContainsi: Time
  notIn: [Time]
  notNull: Boolean
  null: Boolean
  or: [Time]
  startsWith: Time
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadFile {
  alternativeText: String
  caption: String
  createdAt: DateTime
  ext: String
  formats: JSON
  hash: String!
  height: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  related: [GenericMorph]
  size: Float!
  updatedAt: DateTime
  url: String!
  width: Int
}

type UploadFileEntity {
  attributes: UploadFile
  id: ID
}

type UploadFileEntityResponse {
  data: UploadFileEntity
}

type UploadFileEntityResponseCollection {
  data: [UploadFileEntity!]!
  meta: ResponseCollectionMeta!
}

input UploadFileFiltersInput {
  alternativeText: StringFilterInput
  and: [UploadFileFiltersInput]
  caption: StringFilterInput
  createdAt: DateTimeFilterInput
  ext: StringFilterInput
  folder: UploadFolderFiltersInput
  folderPath: StringFilterInput
  formats: JSONFilterInput
  hash: StringFilterInput
  height: IntFilterInput
  id: IDFilterInput
  mime: StringFilterInput
  name: StringFilterInput
  not: UploadFileFiltersInput
  or: [UploadFileFiltersInput]
  previewUrl: StringFilterInput
  provider: StringFilterInput
  provider_metadata: JSONFilterInput
  size: FloatFilterInput
  updatedAt: DateTimeFilterInput
  url: StringFilterInput
  width: IntFilterInput
}

input UploadFileInput {
  alternativeText: String
  caption: String
  ext: String
  folder: ID
  folderPath: String
  formats: JSON
  hash: String
  height: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  provider_metadata: JSON
  size: Float
  url: String
  width: Int
}

type UploadFileRelationResponseCollection {
  data: [UploadFileEntity!]!
}

type UploadFolder {
  children(filters: UploadFolderFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UploadFolderRelationResponseCollection
  createdAt: DateTime
  files(filters: UploadFileFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UploadFileRelationResponseCollection
  name: String!
  parent: UploadFolderEntityResponse
  path: String!
  pathId: Int!
  updatedAt: DateTime
}

type UploadFolderEntity {
  attributes: UploadFolder
  id: ID
}

type UploadFolderEntityResponse {
  data: UploadFolderEntity
}

type UploadFolderEntityResponseCollection {
  data: [UploadFolderEntity!]!
  meta: ResponseCollectionMeta!
}

input UploadFolderFiltersInput {
  and: [UploadFolderFiltersInput]
  children: UploadFolderFiltersInput
  createdAt: DateTimeFilterInput
  files: UploadFileFiltersInput
  id: IDFilterInput
  name: StringFilterInput
  not: UploadFolderFiltersInput
  or: [UploadFolderFiltersInput]
  parent: UploadFolderFiltersInput
  path: StringFilterInput
  pathId: IntFilterInput
  updatedAt: DateTimeFilterInput
}

input UploadFolderInput {
  children: [ID]
  files: [ID]
  name: String
  parent: ID
  path: String
  pathId: Int
}

type UploadFolderRelationResponseCollection {
  data: [UploadFolderEntity!]!
}

type UsersPermissionsCreateRolePayload {
  ok: Boolean!
}

type UsersPermissionsDeleteRolePayload {
  ok: Boolean!
}

input UsersPermissionsLoginInput {
  identifier: String!
  password: String!
  provider: String! = "local"
}

type UsersPermissionsLoginPayload {
  jwt: String
  user: UsersPermissionsMe!
}

type UsersPermissionsMe {
  blocked: Boolean
  confirmed: Boolean
  email: String
  id: ID!
  role: UsersPermissionsMeRole
  username: String!
}

type UsersPermissionsMeRole {
  description: String
  id: ID!
  name: String!
  type: String
}

type UsersPermissionsPasswordPayload {
  ok: Boolean!
}

type UsersPermissionsPermission {
  action: String!
  createdAt: DateTime
  role: UsersPermissionsRoleEntityResponse
  updatedAt: DateTime
}

type UsersPermissionsPermissionEntity {
  attributes: UsersPermissionsPermission
  id: ID
}

type UsersPermissionsPermissionEntityResponse {
  data: UsersPermissionsPermissionEntity
}

type UsersPermissionsPermissionEntityResponseCollection {
  data: [UsersPermissionsPermissionEntity!]!
  meta: ResponseCollectionMeta!
}

input UsersPermissionsPermissionFiltersInput {
  action: StringFilterInput
  and: [UsersPermissionsPermissionFiltersInput]
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  not: UsersPermissionsPermissionFiltersInput
  or: [UsersPermissionsPermissionFiltersInput]
  role: UsersPermissionsRoleFiltersInput
  updatedAt: DateTimeFilterInput
}

input UsersPermissionsPermissionInput {
  action: String
  role: ID
}

type UsersPermissionsPermissionRelationResponseCollection {
  data: [UsersPermissionsPermissionEntity!]!
}

input UsersPermissionsRegisterInput {
  email: String!
  password: String!
  username: String!
}

type UsersPermissionsRole {
  createdAt: DateTime
  description: String
  name: String!
  permissions(filters: UsersPermissionsPermissionFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UsersPermissionsPermissionRelationResponseCollection
  type: String
  updatedAt: DateTime
  users(filters: UsersPermissionsUserFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): UsersPermissionsUserRelationResponseCollection
}

type UsersPermissionsRoleEntity {
  attributes: UsersPermissionsRole
  id: ID
}

type UsersPermissionsRoleEntityResponse {
  data: UsersPermissionsRoleEntity
}

type UsersPermissionsRoleEntityResponseCollection {
  data: [UsersPermissionsRoleEntity!]!
  meta: ResponseCollectionMeta!
}

input UsersPermissionsRoleFiltersInput {
  and: [UsersPermissionsRoleFiltersInput]
  createdAt: DateTimeFilterInput
  description: StringFilterInput
  id: IDFilterInput
  name: StringFilterInput
  not: UsersPermissionsRoleFiltersInput
  or: [UsersPermissionsRoleFiltersInput]
  permissions: UsersPermissionsPermissionFiltersInput
  type: StringFilterInput
  updatedAt: DateTimeFilterInput
  users: UsersPermissionsUserFiltersInput
}

input UsersPermissionsRoleInput {
  description: String
  name: String
  permissions: [ID]
  type: String
  users: [ID]
}

type UsersPermissionsRoleRelationResponseCollection {
  data: [UsersPermissionsRoleEntity!]!
}

type UsersPermissionsUpdateRolePayload {
  ok: Boolean!
}

type UsersPermissionsUser {
  blocked: Boolean
  confirmed: Boolean
  createdAt: DateTime
  email: String!
  posts: BlogPostEntityResponse
  provider: String
  role: UsersPermissionsRoleEntityResponse
  updatedAt: DateTime
  username: String!
}

type UsersPermissionsUserEntity {
  attributes: UsersPermissionsUser
  id: ID
}

type UsersPermissionsUserEntityResponse {
  data: UsersPermissionsUserEntity
}

type UsersPermissionsUserEntityResponseCollection {
  data: [UsersPermissionsUserEntity!]!
  meta: ResponseCollectionMeta!
}

input UsersPermissionsUserFiltersInput {
  and: [UsersPermissionsUserFiltersInput]
  blocked: BooleanFilterInput
  confirmationToken: StringFilterInput
  confirmed: BooleanFilterInput
  createdAt: DateTimeFilterInput
  email: StringFilterInput
  id: IDFilterInput
  not: UsersPermissionsUserFiltersInput
  or: [UsersPermissionsUserFiltersInput]
  password: StringFilterInput
  posts: BlogPostFiltersInput
  provider: StringFilterInput
  resetPasswordToken: StringFilterInput
  role: UsersPermissionsRoleFiltersInput
  updatedAt: DateTimeFilterInput
  username: StringFilterInput
}

input UsersPermissionsUserInput {
  blocked: Boolean
  confirmationToken: String
  confirmed: Boolean
  email: String
  password: String
  posts: ID
  provider: String
  resetPasswordToken: String
  role: ID
  username: String
}

type UsersPermissionsUserRelationResponseCollection {
  data: [UsersPermissionsUserEntity!]!
}

type Vzn {
  amedmentDocument(filters: ComponentBlocksDocListExtensionsFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksDocListExtensions]
  cancellationDocument(filters: ComponentBlocksDocListExtensionsFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentBlocksDocListExtensions]
  category: ENUM_VZN_CATEGORY
  consolidatedText: UploadFileEntityResponse
  createdAt: DateTime
  details: String
  mainDocument: UploadFileEntityResponse
  publishedAt: DateTime
  title: String
  updatedAt: DateTime
  validFrom: Date
}

type VznEntity {
  attributes: Vzn
  id: ID
}

type VznEntityResponse {
  data: VznEntity
}

type VznEntityResponseCollection {
  data: [VznEntity!]!
  meta: ResponseCollectionMeta!
}

input VznFiltersInput {
  amedmentDocument: ComponentBlocksDocListExtensionsFiltersInput
  and: [VznFiltersInput]
  cancellationDocument: ComponentBlocksDocListExtensionsFiltersInput
  category: StringFilterInput
  createdAt: DateTimeFilterInput
  details: StringFilterInput
  id: IDFilterInput
  not: VznFiltersInput
  or: [VznFiltersInput]
  publishedAt: DateTimeFilterInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
  validFrom: DateFilterInput
}

input VznInput {
  amedmentDocument: [ComponentBlocksDocListExtensionsInput]
  cancellationDocument: [ComponentBlocksDocListExtensionsInput]
  category: ENUM_VZN_CATEGORY
  consolidatedText: ID
  details: String
  mainDocument: ID
  publishedAt: DateTime
  title: String
  validFrom: Date
}

type VznRelationResponseCollection {
  data: [VznEntity!]!
}
