fragment ParentPage on Page {
  documentId
  slug
  locale
  title
}

fragment PageParentPages on Page {
  ...ParentPage
  parentPage {
    ...ParentPage
    parentPage {
      ...ParentPage
      parentPage {
        ...ParentPage
        parentPage {
          ...ParentPage
        }
      }
    }
  }
}

# TODO previously used in PageEntity fragment
# fragment Localization on PageRelationResponseCollection {
#   slug
#   locale
# }

fragment PageSlugEntity on Page {
  documentId
  slug
  title
  locale
}

fragment PageCardEntity on Page {
  ...PageSlugEntity
  pageBackgroundImage {
    ...UploadImageSrcEntity
  }
}

fragment PageCardWithHeadersEntity on Page {
  ...PageCardEntity
  pageHeaderSections {
    ...PageHeaderSections
  }
}

fragment PageEntity on Page {
  ...PageCardEntity
  alias
  subtext
  pageColor
  metaDiscription
  keywords
  showTableOfContents
  adminGroups {
    ...AdminGroupEntity
  }
  headerLinks {
    ...CommonLink
  }
  pageHeaderSections {
    ...PageHeaderSections
  }
  subnavigation {
    ...SubnavigationSection
  }
  sections {
    ...Sections
  }
  sidebar {
    ...Sidebars
  }
  localizations {
    slug
    locale
  }
  relatedContents {
    ...TagEntity
  }
  ...PageParentPages
}

query PagesStaticPaths {
  pages(pagination: { limit: -1 }) {
    documentId
    slug
  }
}

query PageBySlug($slug: String!, $locale: I18NLocaleCode!) {
  pages(filters: { slug: { eq: $slug } }, locale: $locale) {
    ...PageEntity
  }
}

# Based on OLO: https://github.com/bratislava/olo.sk/blob/master/next/src/services/graphql/queries/pages.gql
query PageRedirectByAlias($alias: String!, $locale: I18NLocaleCode!) {
  pages(filters: { alias: { eq: $alias } }, locale: $locale) {
    ...PageSlugEntity
  }
  articles(filters: { alias: { eq: $alias } }, locale: $locale) {
    ...ArticleSlugEntity
  }
}

query Dev_AllPages(
  $sort: [String]
  $limit: Int
  $start: Int
  $filters: PageFiltersInput
  $locale: I18NLocaleCode
) {
  pages(
    sort: $sort
    pagination: { limit: $limit, start: $start }
    filters: $filters
    locale: $locale
  ) {
    ...PageEntity
  }
}

mutation updatePage($documentId: ID!, $locale: I18NLocaleCode, $pageInput: PageInput!) {
  updatePage(documentId: $documentId, locale: $locale, data: $pageInput) {
    documentId
  }
}
